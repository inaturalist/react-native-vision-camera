{"version":3,"names":["withPlugins","AndroidConfig","createRunOncePlugin","withDisableFrameProcessorsAndroid","withDisableFrameProcessorsIOS","pkg","require","CAMERA_USAGE","MICROPHONE_USAGE","withCamera","config","_ref","_props$cameraPermissi","props","arguments","length","undefined","ios","infoPlist","NSCameraUsageDescription","cameraPermissionText","enableMicrophonePermission","_ref2","_props$microphonePerm","NSMicrophoneUsageDescription","microphonePermissionText","androidPermissions","push","disableFrameProcessors","Permissions","withPermissions","name","version"],"sources":["withVisionCamera.ts"],"sourcesContent":["import { withPlugins, AndroidConfig, ConfigPlugin, createRunOncePlugin } from '@expo/config-plugins';\nimport { withDisableFrameProcessorsAndroid } from './withDisableFrameProcessorsAndroid';\nimport { withDisableFrameProcessorsIOS } from './withDisableFrameProcessorsIOS';\n// eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment\nconst pkg = require('../../../package.json');\n\nconst CAMERA_USAGE = 'Allow $(PRODUCT_NAME) to access your camera';\nconst MICROPHONE_USAGE = 'Allow $(PRODUCT_NAME) to access your microphone';\n\ntype Props = {\n  cameraPermissionText?: string;\n  enableMicrophonePermission?: boolean;\n  microphonePermissionText?: string;\n  disableFrameProcessors?: boolean;\n};\n\nconst withCamera: ConfigPlugin<Props> = (config, props = {}) => {\n  if (config.ios == null) config.ios = {};\n  if (config.ios.infoPlist == null) config.ios.infoPlist = {};\n  config.ios.infoPlist.NSCameraUsageDescription =\n    props.cameraPermissionText ?? (config.ios.infoPlist.NSCameraUsageDescription as string | undefined) ?? CAMERA_USAGE;\n  if (props.enableMicrophonePermission) {\n    config.ios.infoPlist.NSMicrophoneUsageDescription =\n      props.microphonePermissionText ?? (config.ios.infoPlist.NSMicrophoneUsageDescription as string | undefined) ?? MICROPHONE_USAGE;\n  }\n  const androidPermissions = ['android.permission.CAMERA'];\n  if (props.enableMicrophonePermission) androidPermissions.push('android.permission.RECORD_AUDIO');\n\n  if (props.disableFrameProcessors) {\n    config = withDisableFrameProcessorsAndroid(config);\n    config = withDisableFrameProcessorsIOS(config);\n  }\n\n  return withPlugins(config, [[AndroidConfig.Permissions.withPermissions, androidPermissions]]);\n};\n\nexport default createRunOncePlugin(withCamera, pkg.name, pkg.version);\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,aAAa,EAAgBC,mBAAmB,QAAQ,sBAAsB;AACpG,SAASC,iCAAiC,QAAQ,qCAAqC;AACvF,SAASC,6BAA6B,QAAQ,iCAAiC;AAC/E;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAE5C,MAAMC,YAAY,GAAG,6CAA6C;AAClE,MAAMC,gBAAgB,GAAG,iDAAiD;AAS1E,MAAMC,UAA+B,GAAG,SAAAA,CAACC,MAAM,EAAiB;EAAA,IAAAC,IAAA,EAAAC,qBAAA;EAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACzD,IAAIJ,MAAM,CAACO,GAAG,IAAI,IAAI,EAAEP,MAAM,CAACO,GAAG,GAAG,CAAC,CAAC;EACvC,IAAIP,MAAM,CAACO,GAAG,CAACC,SAAS,IAAI,IAAI,EAAER,MAAM,CAACO,GAAG,CAACC,SAAS,GAAG,CAAC,CAAC;EAC3DR,MAAM,CAACO,GAAG,CAACC,SAAS,CAACC,wBAAwB,IAAAR,IAAA,IAAAC,qBAAA,GAC3CC,KAAK,CAACO,oBAAoB,cAAAR,qBAAA,cAAAA,qBAAA,GAAKF,MAAM,CAACO,GAAG,CAACC,SAAS,CAACC,wBAAwB,cAAAR,IAAA,cAAAA,IAAA,GAA2BJ,YAAY;EACrH,IAAIM,KAAK,CAACQ,0BAA0B,EAAE;IAAA,IAAAC,KAAA,EAAAC,qBAAA;IACpCb,MAAM,CAACO,GAAG,CAACC,SAAS,CAACM,4BAA4B,IAAAF,KAAA,IAAAC,qBAAA,GAC/CV,KAAK,CAACY,wBAAwB,cAAAF,qBAAA,cAAAA,qBAAA,GAAKb,MAAM,CAACO,GAAG,CAACC,SAAS,CAACM,4BAA4B,cAAAF,KAAA,cAAAA,KAAA,GAA2Bd,gBAAgB;EACnI;EACA,MAAMkB,kBAAkB,GAAG,CAAC,2BAA2B,CAAC;EACxD,IAAIb,KAAK,CAACQ,0BAA0B,EAAEK,kBAAkB,CAACC,IAAI,CAAC,iCAAiC,CAAC;EAEhG,IAAId,KAAK,CAACe,sBAAsB,EAAE;IAChClB,MAAM,GAAGP,iCAAiC,CAACO,MAAM,CAAC;IAClDA,MAAM,GAAGN,6BAA6B,CAACM,MAAM,CAAC;EAChD;EAEA,OAAOV,WAAW,CAACU,MAAM,EAAE,CAAC,CAACT,aAAa,CAAC4B,WAAW,CAACC,eAAe,EAAEJ,kBAAkB,CAAC,CAAC,CAAC;AAC/F,CAAC;AAED,eAAexB,mBAAmB,CAACO,UAAU,EAAEJ,GAAG,CAAC0B,IAAI,EAAE1B,GAAG,CAAC2B,OAAO,CAAC"}